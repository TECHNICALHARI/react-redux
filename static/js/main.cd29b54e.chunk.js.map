{"version":3,"sources":["redux/cakes/cakeTypes.js","redux/cakes/cakeReducer.js","redux/iceCreams/IceCreamTypes.js","redux/iceCreams/IceCreamReducer.js","redux/RootReducer.js","redux/store.js","redux/cakes/cakeAction.js","components/CakeContainer.js","components/HooksCakeContainer.js","components/IceCreamContainer.js","redux/iceCreams/IceCreamActions.js","App.js","reportWebVitals.js","index.js"],"names":["BUY_CAKE","initialState","numOfCakes","cakeReducer","state","action","type","BUY_ICECREAM","initialStateIceCream","numOfIceCreams","iceCreamReducer","rootReducer","combineReducers","cake","iceCream","store","createStore","buyCake","connect","dispatch","props","onClick","HooksCakeContainer","useSelector","useDispatch","buyIceCream","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAcA,EAAU,WCClBC,EAAa,CACfC,WAAW,IAWAC,EATG,WAA8B,IAA7BC,EAA4B,uDAAtBH,EAAaI,EAAS,uCAC3C,OAAQA,EAAOC,MACX,KAAKN,EAAS,kCACPI,GADO,IAEVF,WAAWE,EAAMF,WAAW,IAEhC,QAAQ,OAAOE,ICVVG,EAAa,eCCpBC,EAAqB,CACvBC,eAAe,IAWJC,EATO,WAAsC,IAArCN,EAAoC,uDAA9BI,EAAqBH,EAAS,uCACvD,OAAQA,EAAOC,MACX,KAAKC,EAAc,kCACZH,GADY,IAEfK,eAAeL,EAAMK,eAAe,IAExC,QAAQ,OAAOL,ICHRO,EAJGC,YAAgB,CAC9BC,KAAKV,EACLW,SAASJ,ICDEK,EAFHC,YAAYL,GCDlBM,G,MAAQ,WACV,MAAM,CACFX,KAAKN,KCUb,IAUekB,eAVO,SAAAd,GAClB,MAAM,CACFF,WAAWE,EAAMS,KAAKX,eAGL,SAAAiB,GACrB,MAAM,CACFF,QAAQ,kBAAIE,EAASF,SAGdC,EAnBf,SAAuBE,GACnB,OACI,gCACI,mDAAsBA,EAAMlB,cAC5B,wBAAQmB,QAASD,EAAMH,QAAvB,4BCOGK,MAXf,WACE,IAAMpB,EAAYqB,aAAY,SAAAnB,GAAK,OAAEA,EAAMS,KAAKX,cAC3CiB,EAAUK,cACb,OACI,gCACI,mDAAsBtB,KACtB,wBAASmB,QAAS,kBAAIF,EAASF,MAA/B,0BCGZ,IAUeC,eAVO,SAAAd,GAClB,MAAM,CACFK,eAAeL,EAAMU,SAASL,mBAGb,SAAAU,GACrB,MAAM,CACFM,YAAY,kBAAIN,EClBd,CACFb,KAAKC,QDoBEW,EAnBf,SAA2BE,GACvB,OACI,gCACI,uDAA0BA,EAAMX,kBAChC,wBAAQY,QAASD,EAAMK,YAAvB,iCEYGC,MAZf,WACE,OACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACA,sBAAKY,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd29b54e.chunk.js","sourcesContent":["export  const BUY_CAKE ='BUY_CAKE';","import {BUY_CAKE} from './cakeTypes';\r\nconst initialState={\r\n    numOfCakes:10\r\n}\r\nconst cakeReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case BUY_CAKE:return{\r\n            ...state,\r\n            numOfCakes:state.numOfCakes-1\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default cakeReducer;","export const BUY_ICECREAM='BUY_ICECREAM';","import {BUY_ICECREAM} from './IceCreamTypes';\r\nconst initialStateIceCream={\r\n    numOfIceCreams:20\r\n}\r\nconst iceCreamReducer=(state=initialStateIceCream,action)=>{\r\n    switch (action.type) {\r\n        case BUY_ICECREAM: return{\r\n            ...state,\r\n            numOfIceCreams:state.numOfIceCreams-1\r\n        }\r\n        default:return state\r\n    }\r\n}\r\nexport default iceCreamReducer;","import {combineReducers} from 'redux';\r\nimport cakeReducer from './cakes/cakeReducer';\r\nimport iceCreamReducer from './iceCreams/IceCreamReducer';\r\nconst rootReducer=combineReducers({\r\n    cake:cakeReducer,\r\n    iceCream:iceCreamReducer\r\n})\r\nexport default rootReducer;\r\n","import {createStore} from 'redux';\r\nimport rootReducer from './RootReducer';\r\nconst store=createStore(rootReducer)\r\n\r\nexport default store;\r\n","import {BUY_CAKE} from './cakeTypes';\r\nconst buyCake=()=>{\r\n    return{\r\n        type:BUY_CAKE\r\n    }\r\n}\r\nexport {buyCake};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { buyCake } from '../redux';\r\n\r\nfunction CakeContainer(props) {\r\n    return (\r\n        <div>\r\n            <h2>Number of Cakes- {props.numOfCakes}</h2>\r\n            <button onClick={props.buyCake}>Buy Cake</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        numOfCakes:state.cake.numOfCakes\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        buyCake:()=>dispatch(buyCake())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CakeContainer)\r\n","import React from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { buyCake } from '../redux';\r\n\r\nfunction HooksCakeContainer() {\r\n  const numOfCakes= useSelector(state=>state.cake.numOfCakes)\r\n const dispatch= useDispatch()\r\n    return (\r\n        <div>\r\n            <h2>Number Of Cakes -{numOfCakes}</h2>\r\n            <button  onClick={()=>dispatch(buyCake())}>Buy Cake</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HooksCakeContainer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { buyIceCream } from '../redux';\r\n\r\nfunction IceCreamContainer(props) {\r\n    return (\r\n        <div>\r\n            <h2>Number of Icecreams- {props.numOfIceCreams}</h2>\r\n            <button onClick={props.buyIceCream}>Buy Icecreams</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        numOfIceCreams:state.iceCream.numOfIceCreams\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        buyIceCream:()=>dispatch(buyIceCream())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(IceCreamContainer)\r\n","import {BUY_ICECREAM} from './IceCreamTypes';\r\nexport const buyIceCream=()=>{\r\n    return{\r\n        type:BUY_ICECREAM\r\n    }\r\n}","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './App.css';\nimport CakeContainer from './components/CakeContainer';\nimport HooksCakeContainer from './components/HooksCakeContainer';\nimport IceCreamContainer from './components/IceCreamContainer';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <CakeContainer/>\n      <HooksCakeContainer/>\n      <IceCreamContainer/>\n    </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}